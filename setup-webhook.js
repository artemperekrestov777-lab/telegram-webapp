const axios = require('axios');
require('dotenv').config();

const BOT_TOKEN = process.env.BOT_TOKEN;
const SERVER_URL = process.env.SERVER_URL || 'http://85.198.83.41:3000';

async function setupWebhook() {
    const webhookUrl = `${SERVER_URL}/bot${BOT_TOKEN}`;

    console.log('üîß –ù–∞—Å—Ç—Ä–æ–π–∫–∞ webhook –¥–ª—è Telegram –±–æ—Ç–∞...');
    console.log(`üìç Webhook URL: ${webhookUrl}`);

    try {
        // –£–¥–∞–ª—è–µ–º —Å—Ç–∞—Ä—ã–π webhook
        console.log('üóëÔ∏è  –£–¥–∞–ª–µ–Ω–∏–µ —Å—Ç–∞—Ä–æ–≥–æ webhook...');
        await axios.get(`https://api.telegram.org/bot${BOT_TOKEN}/deleteWebhook`);

        // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –Ω–æ–≤—ã–π webhook
        console.log('üìå –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –Ω–æ–≤–æ–≥–æ webhook...');
        const response = await axios.post(
            `https://api.telegram.org/bot${BOT_TOKEN}/setWebhook`,
            {
                url: webhookUrl,
                allowed_updates: ['message', 'callback_query', 'web_app_data']
            }
        );

        if (response.data.ok) {
            console.log('‚úÖ Webhook —É—Å–ø–µ—à–Ω–æ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω!');

            // –ü—Ä–æ–≤–µ—Ä—è–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ webhook
            const info = await axios.get(`https://api.telegram.org/bot${BOT_TOKEN}/getWebhookInfo`);
            console.log('\nüìä –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ webhook:');
            console.log(`   URL: ${info.data.result.url}`);
            console.log(`   Pending updates: ${info.data.result.pending_update_count}`);
            console.log(`   Max connections: ${info.data.result.max_connections || 40}`);

            if (info.data.result.last_error_message) {
                console.log(`   ‚ö†Ô∏è  –ü–æ—Å–ª–µ–¥–Ω—è—è –æ—à–∏–±–∫–∞: ${info.data.result.last_error_message}`);
            }
        } else {
            console.error('‚ùå –û—à–∏–±–∫–∞ —É—Å—Ç–∞–Ω–æ–≤–∫–∏ webhook:', response.data);
        }
    } catch (error) {
        console.error('‚ùå –û—à–∏–±–∫–∞:', error.message);
        if (error.response) {
            console.error('–û—Ç–≤–µ—Ç —Å–µ—Ä–≤–µ—Ä–∞:', error.response.data);
        }
    }
}

// –ó–∞–ø—É—Å–∫–∞–µ–º —É—Å—Ç–∞–Ω–æ–≤–∫—É
setupWebhook();